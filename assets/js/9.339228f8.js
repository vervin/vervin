(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{584:function(s,a,n){s.exports=n.p+"assets/img/time.619c6da4.png"},585:function(s,a,n){s.exports=n.p+"assets/img/bubble.33a947c7.gif"},586:function(s,a,n){s.exports=n.p+"assets/img/quick.c411339b.gif"},587:function(s,a,n){s.exports=n.p+"assets/img/quick.c808a768.jpg"},609:function(s,a,n){"use strict";n.r(a);var t=n(8),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[t("img",{attrs:{src:n(584),alt:"十大经典算法导图"}})]),s._v(" "),t("blockquote",[t("p",[s._v("为何我们需要如此多的排序算法")])]),s._v(" "),t("ul",[t("li",[s._v("归并排序适用于排序关联的列表（因为它不需要获得像数组一样可以访问任何下标的数据的特性）")]),s._v(" "),t("li",[s._v("堆排序非常适用于排序数组（并且被许多关系型数据库引擎用于内存中排序，或 polyphase merge sort ），它使用少量额外的空间，但是是非常可预测的（因为无论什么数据输入都是 O(n·log(n)) time），是数据库引擎中需要的排序算法。")]),s._v(" "),t("li",[s._v("快速排序具有出色的平均排序性能（比 n·log(n)) time 还要快），也有最坏情况的 O(n²)，它是大部分库的默认排序方式（如 JavaScript 的 array.sort() ），它的最坏情况是数据库引擎不用它的原因（即快速排序不是完美无缺的）。")]),s._v(" "),t("li",[s._v("当你的数据元素接近排序完成时，插入排序是好的选择。而如果你要向一个排序的数组/列表中加入几个元素的话，插入排序同样很适合。")]),s._v(" "),t("li",[s._v("甚至是最被人吐槽的、低级的冒泡算法也有适合它的地方：如果你有一个很小的待排序列表，而你可以忍受它的 O(n²) 效率时，它简短的代码将会很合适。")])]),s._v(" "),t("blockquote",[t("p",[s._v("We have many different ones because they satisfy different sorting use-cases. Some examples:")])]),s._v(" "),t("ul",[t("li",[s._v("Merge sort is useful for sorting linked lists.\nPolyphase merge sort is useful if the sort set can’t fit into RAM.")]),s._v(" "),t("li",[s._v("Heapsort is very good for sorting arrays (and is used by many relational db engines for in-memory sorting, or for the memory part of polyphase merge sort). It uses little extra RAM and is very predictable, which is the sort of behavior you want in a db engine.")]),s._v(" "),t("li",[s._v("Quicksort has excellent average-case behavior - and poor worst-case behavior - and is the default sort for most sorting library implementations.Its bad worst-case behavior is why it isn’t used for db engines.")]),s._v(" "),t("li",[s._v("Insertion sort is good if you have a set that is almost sorted; it’s good if you have a sorted list that has a couple items added to it occasionally but then needs to be resorted.")]),s._v(" "),t("li",[s._v("Even the much-ridiculed (including by me) Bubble sort algorithm has its use case: if you have a very small sort set so you can stand its O(n²) average case and don’t want a lot of code - as it’s by far the shortest sort algorithm by simple count of code - it can be used.")])]),s._v(" "),t("h3",{attrs:{id:"swap-函数-es5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#swap-函数-es5"}},[s._v("#")]),s._v(" swap 函数（ES5）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function swap(arr, indexA, indexB) {\n  var temp;\n\n  temp = arr[indexA];\n  arr[indexA] = arr[indexB];\n  arr[indexB] = temp;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"swap-函数-es6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#swap-函数-es6"}},[s._v("#")]),s._v(" swap 函数（ES6）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function swap(arr, indexA, indexB) {\n  [arr[indexA], arr[indexB]] = [arr[indexB], arr[indexA]];\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"bubble-sort-冒泡排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bubble-sort-冒泡排序"}},[s._v("#")]),s._v(" Bubble Sort 冒泡排序")]),s._v(" "),t("h3",{attrs:{id:"简明解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简明解释"}},[s._v("#")]),s._v(" 简明解释")]),s._v(" "),t("p",[s._v("通过依次比较、交换相邻的元素大小（按照由小到大的顺序，如果符合这个顺序就不用交换）。")]),s._v(" "),t("blockquote",[t("p",[s._v("1 次这样的循环可以得到一个最大值，n - 1 次这样的循环可以排序完毕。")])]),s._v(" "),t("p",[t("img",{attrs:{src:n(585),alt:"冒泡排序图解"}})]),s._v(" "),t("h3",{attrs:{id:"基本实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本实现"}},[s._v("#")]),s._v(" 基本实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function bubbleSort(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    for (let j = 0; j < i; j++) {\n      if (arr[j] > arr[j + 1]) {\n        swap(arr, j, j + 1);\n      }\n    }\n  }\n\n  return arr;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"缓存-pos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存-pos"}},[s._v("#")]),s._v(" 缓存 pos")]),s._v(" "),t("blockquote",[t("p",[s._v("设置一标志性变量 pos,用于记录每趟排序中最后一次进行交换的位置。\n由于 pos 位置之后的记录均已交换到位,故在进行下一趟排序时只要扫描到 pos 位置即可。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function bubbleSort2(arr) {\n  let i = arr.length - 1;\n\n  while (i > 0) {\n    let pos = 0;\n\n    for (let j = 0; j < i; j++) {\n      if (arr[j] > arr[j + 1]) {\n        pos = j;\n        swap(arr, j, j + 1);\n      }\n    }\n    i = pos;\n  }\n\n  return arr;\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h3",{attrs:{id:"双向遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双向遍历"}},[s._v("#")]),s._v(" 双向遍历")]),s._v(" "),t("blockquote",[t("p",[s._v("传统冒泡排序中每一趟排序操作只能找到一个最大值或最小值,\n我们可以 在每趟排序中进行正向和反向两遍冒泡 ，\n一次可以得到两个最终值（最大和最小） , 从而使外排序趟数几乎减少了一半。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function bubbleSort3(arr) {\n  let start = 0;\n  let end = arr.length - 1;\n\n  while (start < end) {\n    for (let i = start; i < end; i++) {\n      if (arr[i] > arr[i + 1]) {\n        swap(arr, i, i + 1);\n      }\n    }\n    end -= 1;\n    for (let i = end; i > start; i--) {\n      if (arr[i - 1] > arr[i]) {\n        swap(arr, i - 1, i);\n      }\n    }\n    start += 1;\n  }\n\n  return arr;\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h3",{attrs:{id:"结合-2-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结合-2-3"}},[s._v("#")]),s._v(" 结合 2&3")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function bubbleSort4(arr) {\n  let start = 0;\n  let end = arr.length - 1;\n\n  while (start < end) {\n    let endPos = 0;\n    let startPos = 0;\n\n    for (let i = start; i < end; i++) {\n      if (arr[i] > arr[i + 1]) {\n        endPos = i;\n        swap(arr, i, i + 1);\n      }\n    }\n    end = endPos;\n    for (let i = end; i > start; i--) {\n      if (arr[i - 1] > arr[i]) {\n        startPos = i;\n        swap(arr, i - 1, i);\n      }\n    }\n    start = startPos;\n  }\n\n  return arr;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h3",{attrs:{id:"蚂蚁金服面试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#蚂蚁金服面试"}},[s._v("#")]),s._v(" 蚂蚁金服面试")]),s._v(" "),t("blockquote",[t("p",[s._v("对于冒泡排序来说，能不能传入第二个参数（参数为函数），来控制升序和降序？（联想一下 array.sort()）")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\nfunction bubbleSort(arr, compareFunc) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    for (let j = 0; j < i; j++) {\n      if (compareFunc(arr[j], arr[j + 1]) > 0) {\n        swap(arr, j, j + 1);\n      }\n    }\n  }\n\n  return arr;\n}\n\n// test\nconst arr = [91, 60, 96, 7, 35, 65, 10, 65, 9, 30, 20, 31, 77, 81, 24];\nconsole.log(bubbleSort(arr, (a, b) => a - b));\nconsole.log(bubbleSort(arr, (a, b) => b - a));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h2",{attrs:{id:"quick-sort-快速排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#quick-sort-快速排序"}},[s._v("#")]),s._v(" Quick Sort 快速排序")]),s._v(" "),t("h3",{attrs:{id:"简明解释-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简明解释-2"}},[s._v("#")]),s._v(" 简明解释")]),s._v(" "),t("ol",[t("li",[s._v("从数列中挑出一个元素，称为”基准”（pivot），")]),s._v(" "),t("li",[s._v("重新排序数列，所有比基准值小的元素摆放在基准前面，所有比基准值大的元素摆在基准后面（相同的数可以到任何一边）。在这个分区结束之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。")]),s._v(" "),t("li",[s._v("递归地（recursively）把小于基准值元素的子数列和大于基准值元素的子数列排序。")])]),s._v(" "),t("p",[t("img",{attrs:{src:n(586),alt:"快速排序图解"}}),s._v(" "),t("img",{attrs:{src:n(587),alt:"快速排序图解"}})]),s._v(" "),t("h3",{attrs:{id:"基本实现-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本实现-2"}},[s._v("#")]),s._v(" 基本实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function quickSort(arr) {\n  const pivot = arr[0];\n  const left = [];\n  const right = [];\n  \n  if (arr.length < 2) { return arr; }\n\n  for (let i = 1, len = arr.length; i < len; i++) {\n    arr[i] < pivot ? left.push(arr[i]) : right.push(arr[i]);\n  }\n\n  return quickSort(left).concat([pivot], quickSort(right));\n}\n\n// test\nconst arr = [91, 60, 96, 7, 35, 65, 10, 65, 9, 30, 20, 31, 77, 81, 24];\nconsole.log(quickSort(arr));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"函数式编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[s._v("#")]),s._v(" 函数式编程")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function quickSort2(arr) {\n  const pivot = arr.shift();\n  const left = [];\n  const right = [];\n\n  if (arr.length < 2) { return arr; }\n\n  arr.forEach((element) => {\n    element < pivot ? left.push(element) : right.push(element);\n  });\n\n  return quickSort2(left).concat([pivot], quickSort2(right));\n}\n\n// test\nconst arr = [91, 60, 96, 7, 35, 65, 10, 65, 9, 30, 20, 31, 77, 81, 24];\nconsole.log(quickSort2(arr));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"in-place"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-place"}},[s._v("#")]),s._v(" in-place")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function quickSort3(arr, left = 0, right = arr.length - 1) {\n  if (left < right) {\n    const pivot = partition(arr, left, right);\n\n    quickSort3(arr, left, pivot - 1);\n    quickSort3(arr, pivot + 1, right);\n  }\n  return arr;\n}\n\nfunction partition (arr, left ,right) {\n  let pivot = left; // 以第一个元素为 pivot\n\n  for (let i = left + 1; i <= right; i++) {\n    if (arr[i] < arr[left]) { \n      swap(arr, i, pivot);\n      pivot += 1;\n    }\n  }\n  swap(arr, left, pivot); //将 pivot 值移至中间\n  \n  return pivot;\n}\n\n// test\nconst arr = [91, 60, 96, 7, 35, 65, 10, 65, 9, 30, 20, 31, 77, 81, 24];\nconsole.log(quickSort3(arr));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h3",{attrs:{id:"关于-pivot-的选取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于-pivot-的选取"}},[s._v("#")]),s._v(" 关于 pivot 的选取")]),s._v(" "),t("blockquote",[t("p",[s._v("const pivot = left + Math.ceil((right - left) * 0.5)")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function quickSort4(arr, left = 0, right = arr.length - 1) {\n  if (left < right) {\n    // const pivot = left + Math.ceil((right - left) * 0.5);\n    const pivot = Math.floor((right + left) / 2);\n    const newPivot = partition(arr, pivot, left, right);\n\n    quickSort4(arr, left, newPivot - 1);\n    quickSort4(arr, newPivot + 1, right);\n  }\n\n  return arr;\n}\n\nfunction partition(arr, pivot, left, right) {\n  const pivotValue = arr[pivot];\n  let newPivot = left;\n\n  swap(arr, pivot, right);\n  for (let i = left; i < right; i++) {\n    if (arr[i] < pivotValue) {\n      swap(arr, i, newPivot);\n      newPivot += 1;\n    }\n  }\n  swap(arr, right, newPivot);\n\n  return newPivot;\n}\n\nconst arr = [91, 60, 96, 7, 35, 65, 10, 65, 9, 30, 20, 31, 77, 81, 24];\nconsole.log(quickSort4(arr));\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[s._v("#")]),s._v(" 参考链接")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.rayjune.me/2018/03/22/elegant-javascript-sorting-algorithm-es6/",target:"_blank",rel:"noopener noreferrer"}},[s._v("优雅的 JavaScript 排序算法（ES6）"),t("OutboundLink")],1),t("br"),s._v(" "),t("a",{attrs:{href:"https://www.cnblogs.com/liyongshuai/p/7197962.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("js十大排序算法详解"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);